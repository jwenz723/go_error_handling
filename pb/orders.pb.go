// Code generated by protoc-gen-go. DO NOT EDIT.
// source: orders.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NewOrderRequest struct {
	CustomerID           string   `protobuf:"bytes,1,opt,name=customerID,proto3" json:"customerID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewOrderRequest) Reset()         { *m = NewOrderRequest{} }
func (m *NewOrderRequest) String() string { return proto.CompactTextString(m) }
func (*NewOrderRequest) ProtoMessage()    {}
func (*NewOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f5d4cf0fc9e41b, []int{0}
}

func (m *NewOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewOrderRequest.Unmarshal(m, b)
}
func (m *NewOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewOrderRequest.Marshal(b, m, deterministic)
}
func (m *NewOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewOrderRequest.Merge(m, src)
}
func (m *NewOrderRequest) XXX_Size() int {
	return xxx_messageInfo_NewOrderRequest.Size(m)
}
func (m *NewOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewOrderRequest proto.InternalMessageInfo

func (m *NewOrderRequest) GetCustomerID() string {
	if m != nil {
		return m.CustomerID
	}
	return ""
}

type NewOrderReply struct {
	OrderID              string   `protobuf:"bytes,1,opt,name=orderID,proto3" json:"orderID,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewOrderReply) Reset()         { *m = NewOrderReply{} }
func (m *NewOrderReply) String() string { return proto.CompactTextString(m) }
func (*NewOrderReply) ProtoMessage()    {}
func (*NewOrderReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0f5d4cf0fc9e41b, []int{1}
}

func (m *NewOrderReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewOrderReply.Unmarshal(m, b)
}
func (m *NewOrderReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewOrderReply.Marshal(b, m, deterministic)
}
func (m *NewOrderReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewOrderReply.Merge(m, src)
}
func (m *NewOrderReply) XXX_Size() int {
	return xxx_messageInfo_NewOrderReply.Size(m)
}
func (m *NewOrderReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NewOrderReply.DiscardUnknown(m)
}

var xxx_messageInfo_NewOrderReply proto.InternalMessageInfo

func (m *NewOrderReply) GetOrderID() string {
	if m != nil {
		return m.OrderID
	}
	return ""
}

func (m *NewOrderReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto.RegisterType((*NewOrderRequest)(nil), "pb.NewOrderRequest")
	proto.RegisterType((*NewOrderReply)(nil), "pb.NewOrderReply")
}

func init() { proto.RegisterFile("orders.proto", fileDescriptor_e0f5d4cf0fc9e41b) }

var fileDescriptor_e0f5d4cf0fc9e41b = []byte{
	// 149 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xc9, 0x2f, 0x4a, 0x49,
	0x2d, 0x2a, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0x32, 0xe4, 0xe2,
	0xf7, 0x4b, 0x2d, 0xf7, 0x07, 0x09, 0x07, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0xc9, 0x71,
	0x71, 0x25, 0x97, 0x16, 0x97, 0xe4, 0xe7, 0xa6, 0x16, 0x79, 0xba, 0x48, 0x30, 0x2a, 0x30, 0x6a,
	0x70, 0x06, 0x21, 0x89, 0x28, 0x59, 0x73, 0xf1, 0x22, 0xb4, 0x14, 0xe4, 0x54, 0x0a, 0x49, 0x70,
	0xb1, 0x83, 0xcd, 0x85, 0xab, 0x86, 0x71, 0x85, 0x04, 0xb8, 0x98, 0x53, 0x8b, 0x8a, 0x24, 0x98,
	0xc0, 0xa2, 0x20, 0xa6, 0x91, 0x1d, 0x17, 0x1b, 0x58, 0x67, 0xb1, 0x90, 0x09, 0x17, 0x07, 0xcc,
	0x18, 0x21, 0x61, 0xbd, 0x82, 0x24, 0x3d, 0x34, 0x77, 0x48, 0x09, 0xa2, 0x0a, 0x16, 0xe4, 0x54,
	0x2a, 0x31, 0x24, 0xb1, 0x81, 0x9d, 0x6e, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xe5, 0x04, 0xec,
	0x9c, 0xca, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OrdersClient is the client API for Orders service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrdersClient interface {
	// Creates a new order
	NewOrder(ctx context.Context, in *NewOrderRequest, opts ...grpc.CallOption) (*NewOrderReply, error)
}

type ordersClient struct {
	cc *grpc.ClientConn
}

func NewOrdersClient(cc *grpc.ClientConn) OrdersClient {
	return &ordersClient{cc}
}

func (c *ordersClient) NewOrder(ctx context.Context, in *NewOrderRequest, opts ...grpc.CallOption) (*NewOrderReply, error) {
	out := new(NewOrderReply)
	err := c.cc.Invoke(ctx, "/pb.Orders/NewOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrdersServer is the server API for Orders service.
type OrdersServer interface {
	// Creates a new order
	NewOrder(context.Context, *NewOrderRequest) (*NewOrderReply, error)
}

// UnimplementedOrdersServer can be embedded to have forward compatible implementations.
type UnimplementedOrdersServer struct {
}

func (*UnimplementedOrdersServer) NewOrder(ctx context.Context, req *NewOrderRequest) (*NewOrderReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewOrder not implemented")
}

func RegisterOrdersServer(s *grpc.Server, srv OrdersServer) {
	s.RegisterService(&_Orders_serviceDesc, srv)
}

func _Orders_NewOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServer).NewOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Orders/NewOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServer).NewOrder(ctx, req.(*NewOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Orders_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Orders",
	HandlerType: (*OrdersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewOrder",
			Handler:    _Orders_NewOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "orders.proto",
}
